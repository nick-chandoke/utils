#!/usr/bin/env racket

;; TODO: refactor into picolisp for efficiency

#lang racket/base

(require (only-in racket/path path-get-extension file-name-from-path)
         (only-in racket/list last)
         (only-in racket/string string-prefix?))

(for ([p (in-directory (build-path (find-system-path 'home-dir) ".termcolors")
                       (Î» (p) (not (string-prefix? (path->string (last (explode-path p))) "."))))]
      #:when (and (file-exists? p) (let ([ext (path-get-extension p)]) (and ext (bytes=? #".conf" ext)))))
  (let ([s (path->string (file-name-from-path p))])
    (displayln (substring s 0 (- (string-length s) 5)))))
